name: Test and Deploy (Optional Merge)

on:
  push:
    branches:
      - main # Adjust if using a different branch for development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x' # Adjust if needed

      - name: Install dependencies
        working-directory: .
        run: npm install # Adjust if using yarn

      - name: Run all the tests
        working-directory: .
        run: npm test:all # Adjust command if your test runner has a different name

      - name: Run Linter
        working-directory: .
        run: npm lint # Adjust command if using a different linter

      - name: Run Formatter
        working-directory: .
        run: npm format # Adjust command if using a different formatter

  merge: # Optional job for merging (consider pull requests for review)
    runs-on: ubuntu-latest
    needs: build # Wait for the 'build' job to complete
    if: success() # Only run if 'build' job succeeds

    steps:
      - name: Merge to main branch (if desired)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { GitHub } = require('@actions/github');
            const octokit = new GitHub(process.env.GITHUB_TOKEN);

            // Find open pull request targeting 'main' branch (adjust branch name)
            const { data: pulls } = await octokit.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:main`,  # Adjust branch name
            });

            if (pulls.length === 1) {
              // Merge the pull request using 'squash' method (adjust if needed)
              await octokit.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pulls[0].number,
                merge_method: 'squash',  # Choose your merge method (squash, merge)
              });
            }
